package view;

//Sessão de importação.
import controller.ControllerCargo;
import controller.ControllerRecurso;
import controller.ControllerUser;
import java.sql.ResultSet;
import java.sql.SQLException;
import model.Recurso;
import model.Cargo;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.User;
import utils.DocumentoLimitado;

/**
 * Classe que define a tela ~ Acesso.
 * @author Vinicius Tavano Ferreira
 * @since Classe criada em 14/09/2017
 */
public class ViewRecurso extends javax.swing.JFrame {

    private Recurso funcionario;
    private List<Recurso> funcionarios;
    private List<Cargo> tipos;
    private List<User> users;
    private final User user;
    /**
     * Creates new form FormFuncionario
     * @param user
     */
    public ViewRecurso(User user) {
        initComponents();
        this.user = user;
        this.populaComboTipo();
        this.populaComboUsuario();
        this.atualizarTabela();
        this.limparCampos();
        tfNome.setDocument(new DocumentoLimitado(44));
        tfEndereco.setDocument(new DocumentoLimitado(45));
        tfCidade.setDocument(new DocumentoLimitado(20));
        
    }

    private ViewRecurso() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoSexo = new javax.swing.ButtonGroup();
        painelFuncionario = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        lbCodigo = new javax.swing.JLabel();
        lbPreco = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        tfNome = new javax.swing.JTextField();
        tfCidade = new javax.swing.JTextField();
        lbPreco1 = new javax.swing.JLabel();
        cbCargo = new javax.swing.JComboBox<>();
        lbEndereco = new javax.swing.JLabel();
        cbEstado = new javax.swing.JComboBox<>();
        lbSexo = new javax.swing.JLabel();
        tfEndereco = new javax.swing.JTextField();
        rbMasculino = new javax.swing.JRadioButton();
        rbFeminino = new javax.swing.JRadioButton();
        lbEstado = new javax.swing.JLabel();
        lbImagem = new javax.swing.JLabel();
        cbUsuario = new javax.swing.JComboBox<>();
        lbUsuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFuncionarios = new javax.swing.JTable();
        painelBotoes = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btMenu = new javax.swing.JButton();
        btListagemFuncionarios = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(java.awt.Color.white);
        setResizable(false);

        painelFuncionario.setBackground(new java.awt.Color(255, 255, 255));
        painelFuncionario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Funcionário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        painelFuncionario.setToolTipText("");
        painelFuncionario.setName(""); // NOI18N

        lbNome.setForeground(new java.awt.Color(0, 153, 255));
        lbNome.setText("Nome:");

        lbCodigo.setForeground(new java.awt.Color(0, 153, 255));
        lbCodigo.setText("Código:");

        lbPreco.setForeground(new java.awt.Color(0, 153, 255));
        lbPreco.setText("Cidade:");

        tfCodigo.setBackground(new java.awt.Color(227, 218, 218));
        tfCodigo.setFocusable(false);

        tfCidade.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        tfCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCidadeActionPerformed(evt);
            }
        });

        lbPreco1.setForeground(new java.awt.Color(0, 153, 255));
        lbPreco1.setText("Cargo:");

        cbCargo.setBackground(new java.awt.Color(255, 255, 204));
        cbCargo.setToolTipText("");
        cbCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCargoActionPerformed(evt);
            }
        });

        lbEndereco.setForeground(new java.awt.Color(0, 153, 255));
        lbEndereco.setText("Endereço:");

        cbEstado.setBackground(new java.awt.Color(255, 255, 204));
        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));
        cbEstado.setSelectedIndex(-1);
        cbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoActionPerformed(evt);
            }
        });

        lbSexo.setForeground(new java.awt.Color(0, 153, 255));
        lbSexo.setText("Sexo:");

        tfEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEnderecoActionPerformed(evt);
            }
        });

        GrupoSexo.add(rbMasculino);
        rbMasculino.setForeground(new java.awt.Color(0, 153, 255));
        rbMasculino.setText("Masculino");
        rbMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMasculinoActionPerformed(evt);
            }
        });

        GrupoSexo.add(rbFeminino);
        rbFeminino.setForeground(new java.awt.Color(0, 153, 255));
        rbFeminino.setText("Feminino");

        lbEstado.setForeground(new java.awt.Color(0, 153, 255));
        lbEstado.setText("Estado:");

        lbImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/img10.png"))); // NOI18N

        cbUsuario.setBackground(new java.awt.Color(255, 255, 204));
        cbUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUsuarioActionPerformed(evt);
            }
        });

        lbUsuario.setForeground(new java.awt.Color(0, 153, 255));
        lbUsuario.setText("Usuário:");

        javax.swing.GroupLayout painelFuncionarioLayout = new javax.swing.GroupLayout(painelFuncionario);
        painelFuncionario.setLayout(painelFuncionarioLayout);
        painelFuncionarioLayout.setHorizontalGroup(
            painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFuncionarioLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFuncionarioLayout.createSequentialGroup()
                        .addComponent(lbPreco1)
                        .addGap(18, 18, 18)
                        .addComponent(cbCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCodigo)
                            .addComponent(lbNome)
                            .addComponent(lbPreco))
                        .addGap(18, 18, 18)
                        .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelFuncionarioLayout.createSequentialGroup()
                                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                                .addComponent(lbImagem))
                            .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelFuncionarioLayout.createSequentialGroup()
                                    .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rbMasculino)
                                        .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(painelFuncionarioLayout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(rbFeminino))
                                        .addGroup(painelFuncionarioLayout.createSequentialGroup()
                                            .addGap(37, 37, 37)
                                            .addComponent(lbEstado)
                                            .addGap(18, 18, 18)
                                            .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(painelFuncionarioLayout.createSequentialGroup()
                        .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSexo)
                            .addComponent(lbEndereco))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
        );
        painelFuncionarioLayout.setVerticalGroup(
            painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFuncionarioLayout.createSequentialGroup()
                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFuncionarioLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbCodigo)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNome)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelFuncionarioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbImagem)))
                .addGap(17, 17, 17)
                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbEndereco)
                    .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPreco)
                    .addComponent(tfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbEstado))
                .addGap(18, 18, 18)
                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSexo)
                    .addComponent(rbMasculino)
                    .addComponent(rbFeminino))
                .addGap(18, 18, 18)
                .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbUsuario)
                        .addComponent(cbUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbPreco1)
                        .addComponent(cbCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tbFuncionarios.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Endereco", "Cidade", "Estado", "Sexo", "Cargo", "Usuário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbFuncionarios.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbFuncionariosMouseClicked(evt);
            }
        });
        tbFuncionarios.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tbFuncionariosVetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(tbFuncionarios);
        tbFuncionarios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbFuncionarios.getColumnModel().getColumnCount() > 0) {
            tbFuncionarios.getColumnModel().getColumn(0).setMinWidth(40);
            tbFuncionarios.getColumnModel().getColumn(0).setMaxWidth(50);
            tbFuncionarios.getColumnModel().getColumn(1).setResizable(false);
            tbFuncionarios.getColumnModel().getColumn(2).setResizable(false);
            tbFuncionarios.getColumnModel().getColumn(3).setResizable(false);
            tbFuncionarios.getColumnModel().getColumn(4).setMinWidth(30);
            tbFuncionarios.getColumnModel().getColumn(4).setMaxWidth(30);
            tbFuncionarios.getColumnModel().getColumn(5).setResizable(false);
            tbFuncionarios.getColumnModel().getColumn(6).setResizable(false);
        }

        painelBotoes.setBackground(new java.awt.Color(255, 255, 255));
        painelBotoes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btSalvar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btSalvar.setForeground(new java.awt.Color(0, 153, 255));
        btSalvar.setText("Salvar");
        btSalvar.setToolTipText("Incluir ou modificar um funcionário");
        btSalvar.setName("btSalvar"); // NOI18N
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btExcluir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btExcluir.setForeground(new java.awt.Color(0, 153, 255));
        btExcluir.setText("Excluir");
        btExcluir.setToolTipText("Deletar um funcionário");
        btExcluir.setName("btSalvar"); // NOI18N
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btLimpar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btLimpar.setForeground(new java.awt.Color(0, 153, 255));
        btLimpar.setText("Limpar");
        btLimpar.setToolTipText("Limpar os campos da tela");
        btLimpar.setName("btSalvar"); // NOI18N
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btMenu.setForeground(new java.awt.Color(0, 153, 255));
        btMenu.setText("Voltar");
        btMenu.setToolTipText("Voltar à tela de menu");
        btMenu.setName("btSalvar"); // NOI18N
        btMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMenuActionPerformed(evt);
            }
        });

        btListagemFuncionarios.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btListagemFuncionarios.setForeground(new java.awt.Color(0, 153, 255));
        btListagemFuncionarios.setText("Listagem");
        btListagemFuncionarios.setToolTipText("Listar todos os funcionários");
        btListagemFuncionarios.setName("btSalvar"); // NOI18N
        btListagemFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btListagemFuncionariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(btListagemFuncionarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(btLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btExcluir)
                    .addComponent(btLimpar)
                    .addComponent(btMenu)
                    .addComponent(btListagemFuncionarios))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
        );

        painelFuncionario.getAccessibleContext().setAccessibleName("");

        setSize(new java.awt.Dimension(594, 530));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        this.funcionarios.remove(this.funcionario);
        this.removerFuncionario();
        this.limparCampos();
        this.atualizarTabela();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        this.salvarFuncionario();
    }//GEN-LAST:event_btSalvarActionPerformed

    private void tbFuncionariosVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tbFuncionariosVetoableChange
        System.out.println("Printando");
    }//GEN-LAST:event_tbFuncionariosVetoableChange

    private void tbFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbFuncionariosMouseClicked
        int row = this.tbFuncionarios.getSelectedRow();
        this.funcionario = this.funcionarios.get(row);
        this.popularCampos();
    }//GEN-LAST:event_tbFuncionariosMouseClicked

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        this.limparCampos();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMenuActionPerformed
        //Invoca a tela ~ Cockpit.
        new ViewMenu(this.user).setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_btMenuActionPerformed

    private void tfCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCidadeActionPerformed

    private void cbCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCargoActionPerformed

    private void cbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstadoActionPerformed

    private void rbMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMasculinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMasculinoActionPerformed

    private void tfEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfEnderecoActionPerformed

    private void btListagemFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btListagemFuncionariosActionPerformed
        ResultSet rs;
        String listagem = "Código\tNome\t\tEndereço\t\t\t\tCidade\t\t\tEstado\tSexo\tCargo";
        listagem = listagem + "\n================================================================================================================";
        try {
            rs = ControllerRecurso.buscarTodosFuncionarios();
            while (rs.next()) {
                listagem = listagem + "\n"
                + rs.getString("codigo") + "\t"
                + rs.getString("nome") + "\t"
                + rs.getString("endereco") + "\t\t"
                + rs.getString("cidade") + "\t\t\t"
                + rs.getString("estado") + "\t"
                + rs.getString("sexo") + "\t"
                + rs.getString("tipo"); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(ViewRecurso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewRecurso.class.getName()).log(Level.SEVERE, null, ex);
        }
        ViewListagem flo = new ViewListagem(listagem, this, true);
        flo.setVisible(true);
    }//GEN-LAST:event_btListagemFuncionariosActionPerformed

    private void cbUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewRecurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewRecurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewRecurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewRecurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewRecurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoSexo;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btListagemFuncionarios;
    private javax.swing.JButton btMenu;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbCargo;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JComboBox<String> cbUsuario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCodigo;
    private javax.swing.JLabel lbEndereco;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JLabel lbImagem;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbPreco;
    private javax.swing.JLabel lbPreco1;
    private javax.swing.JLabel lbSexo;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelFuncionario;
    private javax.swing.JRadioButton rbFeminino;
    private javax.swing.JRadioButton rbMasculino;
    private javax.swing.JTable tbFuncionarios;
    private javax.swing.JTextField tfCidade;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfEndereco;
    private javax.swing.JTextField tfNome;
    // End of variables declaration//GEN-END:variables

    private void salvarFuncionario() {

        if (!isCamposValidos()) {
            return;
        }
        String nome = this.tfNome.getText();
        String endereco = this.tfEndereco.getText();
        String cidade = this.tfCidade.getText();
        String estado = (String) this.cbEstado.getSelectedItem();
        String sexo = this.rbFeminino.isSelected() ? "Feminino" : "Masculino";
        Cargo tipo = this.tipos.get(this.cbCargo.getSelectedIndex());
        User userAdd = this.users.get(this.cbUsuario.getSelectedIndex());

        if (this.funcionario == null) {
            this.funcionario = new Recurso();
        }

        this.funcionario.setNome(nome);
        this.funcionario.setCidade(cidade);
        this.funcionario.setCargo(tipo);
        this.funcionario.setUser(userAdd);
        this.funcionario.setEndereco(endereco);
        this.funcionario.setEstado(estado);
        this.funcionario.setSexo(sexo);

        try {
            ControllerRecurso.salvarFuncionario(this.funcionario);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ViewRecurso.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.limparCampos();
        this.atualizarTabela();
    }

    private void removerFuncionario() {
        Integer codFuncionario = Integer.parseInt(tfCodigo.getText());
        try {
            ControllerRecurso.excluirFuncionario(codFuncionario);
        } catch (SQLException ex) {
            Logger.getLogger(ViewRecurso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewRecurso.class.getName()).log(Level.SEVERE, null, ex);
        }
        limparCampos();
    }

    private void limparCampos() {
        this.funcionario = null;
        this.tfCodigo.setText("");
        this.tfNome.setText("");
        this.tfEndereco.setText("");
        this.tfCidade.setText("");
        this.cbEstado.setSelectedIndex(-1);
        this.cbCargo.setSelectedIndex(-1);
        this.cbUsuario.setSelectedIndex(-1);
        this.GrupoSexo.clearSelection();

        this.btExcluir.setEnabled(false);
        this.btLimpar.setEnabled(false);
        this.tfCodigo.setEnabled(true);
    }

    private boolean isCamposValidos() {
        boolean isValido = false;

        if (this.tfNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nome do funcionário é obrigatório");
        } else if (this.tfEndereco.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Endereço do funcionário é obrigatório");
        } else if (this.tfCidade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Cidade é obrigatório");
        } else if (this.cbEstado.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Estado do funcionário é obrigatório");
        } else if (!(rbMasculino.isSelected() || rbFeminino.isSelected())) {
            JOptionPane.showMessageDialog(this, "Sexo do funcionário é obrigatório");
        } else if (this.cbCargo.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Cargo do funcionário é obrigatório");
        } else if (this.cbUsuario.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Usuário do funcionário é obrigatório");
        } else {
            isValido = true;
        }
        return isValido;
    }

    private void atualizarTabela() {
        String[] colunas = {"Código", "Nome", "Endereco", "Cidade", "Estado", "Sexo", "Cargo", "Usuário"};
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(colunas);

        try {
            this.funcionarios = ControllerRecurso.lista();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        for (Recurso p : this.funcionarios) {
            tableModel.addRow(p.getValueAsObject());
        }
        this.tbFuncionarios.setModel(tableModel);
    }

    private void popularCampos() {

        if (this.funcionario != null) {
            this.tfCodigo.setText(this.funcionario.getCodigo().toString());
            this.tfNome.setText(this.funcionario.getNome());
            this.tfEndereco.setText(this.funcionario.getEndereco());
            this.tfCidade.setText(this.funcionario.getCidadeAsString());
            this.cbEstado.setSelectedItem(funcionario.getEstado());
            this.rbMasculino.setSelected("Masculino".equals(funcionario.getSexo()));
            this.rbFeminino.setSelected("Feminino".equals(funcionario.getSexo()));
            int index = this.tipos.indexOf(this.funcionario.getCargo());
            this.cbCargo.setSelectedIndex(index);
            index = this.users.indexOf(this.funcionario.getUser());
            this.cbUsuario.setSelectedIndex(index);
        }
        this.btExcluir.setEnabled(true);
        this.btLimpar.setEnabled(true);
        this.tfCodigo.setEnabled(false);
    }

    private void populaComboTipo() {
        try {
            this.tipos = ControllerCargo.lista();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

//        for (Cargo tipo : this.tipos) {
//            this.cbCargo.addItem(tipo.getNome());
//        }
        // Lambda :-)
        this.tipos.forEach((tipo)-> 
                this.cbCargo.addItem(tipo.getNome()));
    }
    
    private void populaComboUsuario() {
        try {
            this.users = ControllerUser.listaRecursos();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
        this.users.forEach((u) -> 
            this.cbUsuario.addItem(u.getCodUser())
        );
    }

}
